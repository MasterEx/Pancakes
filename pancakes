#!/usr/bin/env bash
# writen by Ivan c00kiemon5ter Kanakarakis ~ <ivan.kanak[at]gmail.com>

path="$(dirname "$0")"
sugar="${path}/sugar.conf"
donuts="${path}/donuts"

[[ -r "${donuts}" ]] || {
    printf -- "error: cannot read commands: %s\n" "${donuts}"
    exit 1
}

declare -A conf
declare -A servers

[[ -r "${sugar}" ]] && while read -r; do
    if [[ "${REPLY}" =~ ^[[:alpha:]]+[[:space:]]*=[[:space:]]*[[:alnum:]$/+]+[[:space:]]*$ ]]; then
        IFS+='='; read -r key val _ <<< "${REPLY}"
        conf["${key}"]="${val}"
    elif [[ "${REPLY}" =~ ^server[[:space:]]*=[[:space:]]*([[:alpha:]]+\.)+[[:alpha:]]+[[:space:]]*=[[:space:]]*#[[:alnum:]-]+(([[:space:]]+#[[:alnum:]-]+)+)?[[:space:]]*$ ]]; then
        IFS+='='; read -r _ server channels <<< "${REPLY}"
        servers["${server}"]="${channels}"
    else
        continue
    fi
done < "${sugar}" || {
    printf -- "error: cannot read configuration: %s\n" "${sugar}"
    exit 1
}

: ${conf[prefix]:="${HOME}/irc"}
: ${conf[nickname]:="pancakes"}
: ${conf[realname]:="cookiebot"}
: ${conf[mode]:="+iw"}
: ${conf[hostname]:="cookiebox"}
: ${conf[servername]:="biscuit"}
: ${conf[port]:="6667"}

/bin/mkdir -p "${conf[prefix]}" || {
    printf -- "error: cannot create prefix: %s\n" "${conf[prefix]}"
    exit 1
}

for server in "${!servers[@]}"; do
    exec {ircfd}<> "${conf[prefix]}/${server}.errors.log" 2>&${ircfd}-

    if ! exec {ircfd}<> /dev/tcp/${server}/${conf[port]}; then
        printf -- "unable to connect to server: %s:%d\n" "${server}" "${conf[port]}"
        continue
    fi

    printf -- "PASS %s\n" "${conf[passwd]}" >&${ircfd}
    printf -- "NICK %s\n" "${conf[nickname]}" >&${ircfd}
    printf -- "MODE %s %s\n" "${conf[nickname]}" "${conf[mode]}" >&${ircfd}
    printf -- "USER %s %s %s :%s\n" "${conf[nickname]}" "${conf[hostname]}" "${conf[servername]}" "${conf[realname]}" >&${ircfd}

    for channel in ${servers[${server}]}; do
        printf -- "JOIN %s\n" "${channel}" >&${ircfd}

        fifo="${conf[prefix]}/${server}_${channel#\#}.in"
        /bin/mkfifo "${fifo}" || {
            printf -- "error: cannot create fifo: %s\n" "${fifo}"
            continue
        }

        {   exec {fffd}<>"${fifo}"

            trap 'exec {fffd}>&-; /bin/rm -f "${fifo}";
            printf -- "%s: exiting ..\n" "${fifo}";' EXIT

            printf -- "ACTION %s\n" "Heya peoples :]" >&${fffd}

            while read -r -u ${fffd}
            do printf -- "PRIVMSG %s :%s\n" "${channel}" "${REPLY}" >&${ircfd}
            done
        } &
    done

    {   trap 'printf -- "QUIT :%s will be back ..\n" "${conf[nickname]}" >&${ircfd};
        exec {ircfd}>&-; printf -- "exiting ..\n";' EXIT

        while read -r -u ${ircfd}; do
            set -- ${REPLY//$'\r'/}
            [[ "$1" == "PING" ]] && printf -- "PONG %s\n" "$2" >&${ircfd} && continue

            read -r who did where what <<< "${REPLY%}"
            {  [[ "${did}" == "PART" ]] && what=':!PART'; } || \
            {  [[ "${did}" == "JOIN" ]] && what=':!JOIN'; } || \
               [[ "${did}" == "PRIVMSG" ]] || continue

            printf -- "%s\n" "${REPLY}" >> "${conf[prefix]}/${server}_${where#*\#}_$(date +"%F").log"

            [[ "${who%\!*}" != ":${conf[nickname]}" && "${what}" =~ ^:\! ]] || continue
            exec "${donuts}" "${what#:\!}" "${where#:}" "${who#:}" "${conf[nickname]}" >&${ircfd} &
        done
    } &
done

